---
import type { BlogType } from '../models'
import { addZeros } from '../utils'

interface Props {
  blog: BlogType
}

const { blog } = Astro.props

const getDate = (b: BlogType): string => {
  const date = new Date(b.updated_at)
  const day = date.getDate()
  const month = date.getMonth() + 1
  const year = date.getFullYear().toString().slice(-2)
  return `${addZeros(day)}.${addZeros(month)}.${year}`
}

const calculateReadingTime = (b: BlogType, averageReadingSpeed = 200, wordsPerPage = 300): number => {
  const words = b.content_html.split(/\s+/).length
  const minutesToRead = words / wordsPerPage / (averageReadingSpeed / 60)
  return Math.ceil(minutesToRead)
}
---

<div class="card">
  <h3>{blog.title}</h3>
  <p>{blog.description}</p>
  <div class="footer">
    <div class="sub-footer">
      <time datetime={blog.updated_at}>{getDate(blog)}</time>
      <p class="reading-time">На читання {calculateReadingTime(blog)} хв.</p>
    </div>

    <a class="link" href={'/blog/' + blog.id}>Детальніше</a>
  </div>
</div>

<style>
  .card {
    padding: 40px;
    background-color: #1f2937;
    border-radius: 5px;
    max-width: 600px;
    flex: 1;
  }
  .link {
    margin-top: 10px;
    padding: 10px 20px;
    border-radius: 5px;
    background-color: #a78bfa;
    text-decoration: none;
  }
  .footer {
    display: flex;
    justify-content: space-between;
    align-items: baseline;
    flex-wrap: wrap;
    gap: 10px;
  }
  .sub-footer {
    display: flex;
    align-items: end;
    gap: 20px;
  }
  .reading-time {
    font-size: 14px;
    margin: 0;
  }
</style>
